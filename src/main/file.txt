 /* To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.frame;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import java.sql.ResultSet;
import javax.swing.JLabel;
import java.awt.ActiveEvent;
import java.awt.event.ActionEvent;
import javax.swing.ImageIcon;
import javax.swing.ImageIcon;
import javax.swing.BorderFactory;
import com.toedter.calendar.JDateChooser;
import java.util.Date;
import java.sql.Timestamp;
import com.utility.TableMdf;
import com.beans.UsertypeBean;
import com.daoimpl.UsertypeDaoImpl;
import com.utility.DateFormatter;
import com.utility.Query;
import javax.swing.JButton;
import com.utility.CheckComponent;import java.awt.event.KeyEvent;

import javax.swing.JPanel;
import java.awt.Color;


/**
 *
 * @author tahir hussain
 */
public class UsertypeFrame extends javax.swing.JFrame {

    /**
     * Creates new form UsertypeFrame
     */
    public UsertypeFrame() {
super("null");
usertypeDaoImpl=new UsertypeDaoImpl();
initComponents() ;
obj=new Object[]{userTypeIdTxt,userTypeTxt,createdByTxt,createdDateTs,modifiedByTxt,modifiedDateTs};
heading=new String[]{"User Type Id","User Type","Created By","Created Date","Modified By","Modified Date"};
setValues();
 colName=new String[]{userTypeIdTxt.getName(),userTypeTxt.getName(),createdByTxt.getName(),createdDateTs.getName(),modifiedByTxt.getName(),modifiedDateTs.getName()};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        //setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(1200, 1024));
        setPreferredSize(new java.awt.Dimension(1920, 1024));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
scrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        scrollPane.setBackground(new java.awt.Color(53,59,72));
        scrollPane.setForeground(new java.awt.Color(53,59,72));
        scrollPane.setAutoscrolls(true);
         scrollPane.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        table.setBackground(new java.awt.Color(53,59,72));
         table.setFillsViewportHeight(true);
         table.setRowHeight(30);
         table.setShowHorizontalLines(true);
        table.setShowVerticalLines(true);
        table.setSurrendersFocusOnKeystroke(true);
                 table.setFont(new java.awt.Font("sansserif", 1, 20));
        table.setForeground(new java.awt.Color(255, 255, 255));
         table.setModel(TableMdf.getDefaultTableModel(usertypeDaoImpl.getUsertypeAllRecords()));
        getContentPane().add(scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(
10,600,1873,417));
table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        scrollPane.setViewportView(table);
userTypeIdTxt =new JTextField(10);
userTypeIdTxt.setToolTipText("User Type Id");
userTypeIdTxt.setBounds(255,60,250,40);
userTypeIdTxt.setName("user_type_id");
userTypeIdTxt.setFont(new java.awt.Font("sansserif", 1, 20));
userTypeIdTxt.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
userTypeIdTxt.setText("User Type Id");
userTypeIdTxt.setForeground(new java.awt.Color(204,204,204));
userTypeIdTxt.setBackground(new java.awt.Color(53,59,72));
panel.add(userTypeIdTxt,new org.netbeans.lib.awtextra.AbsoluteConstraints(255,60,250,40));
userTypeIdTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusGained(java.awt.event.FocusEvent evt) {
userTypeIdTxtFocusGained(evt);
}
});
userTypeIdTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusLost(java.awt.event.FocusEvent evt) {
userTypeIdTxtFocusLost(evt);
}
});userTypeIdlbl=new JLabel();
userTypeIdlbl.setText("User Type Id");
userTypeIdlbl.setBounds(55,60,250,40);
userTypeIdlbl.setFont(new java.awt.Font("sansserif", 1, 20));
userTypeIdlbl.setForeground(new java.awt.Color(255, 255, 255));
userTypeIdlbl.setBackground(new java.awt.Color(53,59,72));
panel.add(userTypeIdlbl,new org.netbeans.lib.awtextra.AbsoluteConstraints(55,60,250,40));
userTypeTxt =new JTextField(255);
userTypeTxt.setToolTipText("User Type");
userTypeTxt.setBounds(255,120,250,40);
userTypeTxt.setName("user_type");
userTypeTxt.setFont(new java.awt.Font("sansserif", 1, 20));
userTypeTxt.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
userTypeTxt.setText("User Type");
userTypeTxt.setForeground(new java.awt.Color(204,204,204));
userTypeTxt.setBackground(new java.awt.Color(53,59,72));
panel.add(userTypeTxt,new org.netbeans.lib.awtextra.AbsoluteConstraints(255,120,250,40));
userTypeTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusGained(java.awt.event.FocusEvent evt) {
userTypeTxtFocusGained(evt);
}
});
userTypeTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusLost(java.awt.event.FocusEvent evt) {
userTypeTxtFocusLost(evt);
}
});userTypelbl=new JLabel();
userTypelbl.setText("User Type");
userTypelbl.setBounds(55,120,250,40);
userTypelbl.setFont(new java.awt.Font("sansserif", 1, 20));
userTypelbl.setForeground(new java.awt.Color(255, 255, 255));
userTypelbl.setBackground(new java.awt.Color(53,59,72));
panel.add(userTypelbl,new org.netbeans.lib.awtextra.AbsoluteConstraints(55,120,250,40));
createdByTxt =new JTextField(10);
createdByTxt.setToolTipText("Created By");
createdByTxt.setBounds(255,180,250,40);
createdByTxt.setName("created_by");
createdByTxt.setFont(new java.awt.Font("sansserif", 1, 20));
createdByTxt.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
createdByTxt.setText("Created By");
createdByTxt.setForeground(new java.awt.Color(204,204,204));
createdByTxt.setBackground(new java.awt.Color(53,59,72));
panel.add(createdByTxt,new org.netbeans.lib.awtextra.AbsoluteConstraints(255,180,250,40));
createdByTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusGained(java.awt.event.FocusEvent evt) {
createdByTxtFocusGained(evt);
}
});
createdByTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusLost(java.awt.event.FocusEvent evt) {
createdByTxtFocusLost(evt);
}
});createdBylbl=new JLabel();
createdBylbl.setText("Created By");
createdBylbl.setBounds(55,180,250,40);
createdBylbl.setFont(new java.awt.Font("sansserif", 1, 20));
createdBylbl.setForeground(new java.awt.Color(255, 255, 255));
createdBylbl.setBackground(new java.awt.Color(53,59,72));
panel.add(createdBylbl,new org.netbeans.lib.awtextra.AbsoluteConstraints(55,180,250,40));
createdDateTs=new JDateChooser();
createdDateTs.setBounds(255,240,250,40);
createdDateTs.setName("created_date");
createdDateTs.setBackground(new java.awt.Color(53,59,72));
createdDateTs.setFont(new java.awt.Font("sansserif", 0, 14));
panel.add(createdDateTs,new org.netbeans.lib.awtextra.AbsoluteConstraints(255,240,250,40));
createdDatelbl=new JLabel();
createdDatelbl.setText("Created Date");
createdDatelbl.setBounds(55,240,250,40);
createdDatelbl.setFont(new java.awt.Font("sansserif", 1, 20));
createdDatelbl.setForeground(new java.awt.Color(255, 255, 255));
createdDatelbl.setBackground(new java.awt.Color(53,59,72));
panel.add(createdDatelbl,new org.netbeans.lib.awtextra.AbsoluteConstraints(55,240,250,40));
modifiedByTxt =new JTextField(10);
modifiedByTxt.setToolTipText("Modified By");
modifiedByTxt.setBounds(255,300,250,40);
modifiedByTxt.setName("modified_by");
modifiedByTxt.setFont(new java.awt.Font("sansserif", 1, 20));
modifiedByTxt.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
modifiedByTxt.setText("Modified By");
modifiedByTxt.setForeground(new java.awt.Color(204,204,204));
modifiedByTxt.setBackground(new java.awt.Color(53,59,72));
panel.add(modifiedByTxt,new org.netbeans.lib.awtextra.AbsoluteConstraints(255,300,250,40));
modifiedByTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusGained(java.awt.event.FocusEvent evt) {
modifiedByTxtFocusGained(evt);
}
});
modifiedByTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusLost(java.awt.event.FocusEvent evt) {
modifiedByTxtFocusLost(evt);
}
});modifiedBylbl=new JLabel();
modifiedBylbl.setText("Modified By");
modifiedBylbl.setBounds(55,300,250,40);
modifiedBylbl.setFont(new java.awt.Font("sansserif", 1, 20));
modifiedBylbl.setForeground(new java.awt.Color(255, 255, 255));
modifiedBylbl.setBackground(new java.awt.Color(53,59,72));
panel.add(modifiedBylbl,new org.netbeans.lib.awtextra.AbsoluteConstraints(55,300,250,40));
modifiedDateTs=new JDateChooser();
modifiedDateTs.setBounds(255,360,250,40);
modifiedDateTs.setName("modified_date");
modifiedDateTs.setBackground(new java.awt.Color(53,59,72));
modifiedDateTs.setFont(new java.awt.Font("sansserif", 0, 14));
panel.add(modifiedDateTs,new org.netbeans.lib.awtextra.AbsoluteConstraints(255,360,250,40));
modifiedDatelbl=new JLabel();
modifiedDatelbl.setText("Modified Date");
modifiedDatelbl.setBounds(55,360,250,40);
modifiedDatelbl.setFont(new java.awt.Font("sansserif", 1, 20));
modifiedDatelbl.setForeground(new java.awt.Color(255, 255, 255));
modifiedDatelbl.setBackground(new java.awt.Color(53,59,72));
panel.add(modifiedDatelbl,new org.netbeans.lib.awtextra.AbsoluteConstraints(55,360,250,40));
backBtn=new JButton();
backBtn.setText("BACK");
backBtn.setBounds(200,530,140,50);
backBtn.setFont(new java.awt.Font("sansserif", 1, 20));
backBtn.setIcon(new ImageIcon(getClass().getResource("/com/images/back (6).png")));
backBtn.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
backBtn.setForeground(new java.awt.Color(73, 73, 73));
panel.add(backBtn,new org.netbeans.lib.awtextra.AbsoluteConstraints(200,530,140,50));backBtn.addActionListener(new java.awt.event.ActionListener() {
@Override
public void actionPerformed(java.awt.event.ActionEvent evt) {
backBtnActionPerformed(evt);
}
});
addBtn=new JButton();
addBtn.setText("ADD");
addBtn.setBounds(400,530,140,50);
addBtn.setFont(new java.awt.Font("sansserif", 1, 20));
addBtn.setIcon(new ImageIcon(getClass().getResource("/com/images/add (9).png")));
addBtn.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
addBtn.setForeground(new java.awt.Color(73, 73, 73));
panel.add(addBtn,new org.netbeans.lib.awtextra.AbsoluteConstraints(400,530,140,50));addBtn.addActionListener(new java.awt.event.ActionListener() {
@Override
public void actionPerformed(java.awt.event.ActionEvent evt) {
addBtnActionPerformed(evt);
}
});
deleteBtn=new JButton();
deleteBtn.setText("DELETE");
deleteBtn.setBounds(600,530,140,50);
deleteBtn.setFont(new java.awt.Font("sansserif", 1, 20));
deleteBtn.setIcon(new ImageIcon(getClass().getResource("/com/images/delete  (3).png")));
deleteBtn.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
deleteBtn.setForeground(new java.awt.Color(73, 73, 73));
panel.add(deleteBtn,new org.netbeans.lib.awtextra.AbsoluteConstraints(600,530,140,50));deleteBtn.addActionListener(new java.awt.event.ActionListener() {
@Override
public void actionPerformed(java.awt.event.ActionEvent evt) {
deleteBtnActionPerformed(evt);
}
});
updateBtn=new JButton();
updateBtn.setText("UPDATE");
updateBtn.setBounds(800,530,140,50);
updateBtn.setFont(new java.awt.Font("sansserif", 1, 20));
updateBtn.setIcon(new ImageIcon(getClass().getResource("/com/images/update (11).png")));
updateBtn.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
updateBtn.setForeground(new java.awt.Color(73, 73, 73));
panel.add(updateBtn,new org.netbeans.lib.awtextra.AbsoluteConstraints(800,530,140,50));updateBtn.addActionListener(new java.awt.event.ActionListener() {
@Override
public void actionPerformed(java.awt.event.ActionEvent evt) {
updateBtnActionPerformed(evt);
}
});
viewBtn=new JButton();
viewBtn.setText("VIEW");
viewBtn.setBounds(1000,530,140,50);
viewBtn.setFont(new java.awt.Font("sansserif", 1, 20));
viewBtn.setIcon(new ImageIcon(getClass().getResource("/com/images/view (3).png")));
viewBtn.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
viewBtn.setForeground(new java.awt.Color(73, 73, 73));
panel.add(viewBtn,new org.netbeans.lib.awtextra.AbsoluteConstraints(1000,530,140,50));viewBtn.addActionListener(new java.awt.event.ActionListener() {
@Override
public void actionPerformed(java.awt.event.ActionEvent evt) {
viewBtnActionPerformed(evt);
}
});
nextBtn=new JButton();
nextBtn.setText("NEXT");
nextBtn.setBounds(1200,530,140,50);
nextBtn.setFont(new java.awt.Font("sansserif", 1, 20));
nextBtn.setIcon(new ImageIcon(getClass().getResource("/com/images/next (4).png")));
nextBtn.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
nextBtn.setForeground(new java.awt.Color(73, 73, 73));
panel.add(nextBtn,new org.netbeans.lib.awtextra.AbsoluteConstraints(1200,530,140,50));nextBtn.addActionListener(new java.awt.event.ActionListener() {
@Override
public void actionPerformed(java.awt.event.ActionEvent evt) {
nextBtnActionPerformed(evt);
}
});
searchTxt =new JTextField(250);
searchTxt.setToolTipText("Search Usertype");
searchTxt.setBounds(1400,530,255,50);
searchTxt.setName("search");
searchTxt.setFont(new java.awt.Font("sansserif", 1, 20));
searchTxt.setBorder(
new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
new java.awt.Color(153, 153, 153),
new java.awt.Color(153, 153, 153), null, null));
searchTxt.setText("Search Usertype");
searchTxt.setForeground(new java.awt.Color(189,195,199));
searchTxt.setBackground(new java.awt.Color(53,59,72));
panel.add(searchTxt,new org.netbeans.lib.awtextra.AbsoluteConstraints(1400,530,255,50));
searchTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusGained(java.awt.event.FocusEvent evt) {
searchTxtFocusGained(evt);
}
});
searchTxt.addFocusListener(new java.awt.event.FocusAdapter() {
public void focusLost(java.awt.event.FocusEvent evt) {
searchTxtFocusLost(evt);
}
});searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
public void keyPressed(java.awt.event.KeyEvent evt) {
searchTxtKeyPressed(evt);
}
});searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
public void keyReleased(java.awt.event.KeyEvent evt){
searchTxtKeyReleased(evt);
}
});


        panel.setBackground(new java.awt.Color(53,59,72));
        panel.setMinimumSize(new java.awt.Dimension(1500, 10124));
        panel.setPreferredSize(new java.awt.Dimension(1920, 1200));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1920, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10124, Short.MAX_VALUE)
        );

        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsertypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsertypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsertypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsertypeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsertypeFrame().setVisible(true);
            }
        });
    }
//func
    // Variables declaration - do not modify
    // End of variables declaration                   
JPanel panel;
 private void userTypeIdTxtFocusGained(java.awt.event.FocusEvent evt) {
if(!userTypeIdTxt.getText().equals("User Type Id")){
userTypeIdTxt.setText(userTypeIdTxt.getText());
 }else{
userTypeIdTxt.setText("");
}


}

 private void userTypeIdTxtFocusLost(java.awt.event.FocusEvent evt) {
if(userTypeIdTxt.getText()==null || userTypeIdTxt.getText().equals("")){

userTypeIdTxt.setText("User Type Id");
}

}

 private void userTypeTxtFocusGained(java.awt.event.FocusEvent evt) {
if(!userTypeTxt.getText().equals("User Type")){
userTypeTxt.setText(userTypeTxt.getText());
 }else{
userTypeTxt.setText("");
}


}

 private void userTypeTxtFocusLost(java.awt.event.FocusEvent evt) {
if(userTypeTxt.getText()==null || userTypeTxt.getText().equals("")){

userTypeTxt.setText("User Type");
}

}

 private void createdByTxtFocusGained(java.awt.event.FocusEvent evt) {
if(!createdByTxt.getText().equals("Created By")){
createdByTxt.setText(createdByTxt.getText());
 }else{
createdByTxt.setText("");
}


}

 private void createdByTxtFocusLost(java.awt.event.FocusEvent evt) {
if(createdByTxt.getText()==null || createdByTxt.getText().equals("")){

createdByTxt.setText("Created By");
}

}

 private void modifiedByTxtFocusGained(java.awt.event.FocusEvent evt) {
if(!modifiedByTxt.getText().equals("Modified By")){
modifiedByTxt.setText(modifiedByTxt.getText());
 }else{
modifiedByTxt.setText("");
}


}

 private void modifiedByTxtFocusLost(java.awt.event.FocusEvent evt) {
if(modifiedByTxt.getText()==null || modifiedByTxt.getText().equals("")){

modifiedByTxt.setText("Modified By");
}

}

 private void tableMouseClicked(java.awt.event.MouseEvent evt) {
fillFieldsFromTable();
}public void setValues(){
values=new Object[]{userTypeIdTxt.getText(),userTypeTxt.getText(),createdByTxt.getText(),createdDateTs.getDate(),modifiedByTxt.getText(),modifiedDateTs.getDate()};}
public void backBtnActionPerformed(ActionEvent event){
back(); 
}public void addBtnActionPerformed(ActionEvent event){
addUsertype(); 
}public void deleteBtnActionPerformed(ActionEvent event){
deleteUsertype(); 
}public void updateBtnActionPerformed(ActionEvent event){
updateUsertype(); 
}public void viewBtnActionPerformed(ActionEvent event){
viewUsertype(); 
}public void nextBtnActionPerformed(ActionEvent event){
next(); 
} private void searchTxtFocusGained(java.awt.event.FocusEvent evt) {
if(!searchTxt.getText().equals("Search Usertype")){
searchTxt.setText(searchTxt.getText());
 }else{
searchTxt.setText("");
}


}

 private void searchTxtFocusLost(java.awt.event.FocusEvent evt) {
if(searchTxt.getText()==null || searchTxt.getText().equals("")){
//write code for focus lost
searchTxt.setText("Search Usertype");
}

}

public void searchTxtKeyPressed(java.awt.event.KeyEvent event){

//do it

}
public void searchTxtKeyReleased(java.awt.event.KeyEvent event){
TableMdf.tableSort(table,searchTxt);

}
JTextField userTypeIdTxt;
JLabel userTypeIdlbl;
JTextField userTypeTxt;
JLabel userTypelbl;
JTextField createdByTxt;
JLabel createdBylbl;
JDateChooser createdDateTs;
JLabel createdDatelbl;
JTextField modifiedByTxt;
JLabel modifiedBylbl;
JDateChooser modifiedDateTs;
JLabel modifiedDatelbl;
UsertypeBean usertypeBean;
UsertypeDaoImpl usertypeDaoImpl;
JScrollPane scrollPane;
Object[] obj;
String[] heading;
Object[] values;
String[] colName;
JButton backBtn;
JButton addBtn;
JButton deleteBtn;
JButton updateBtn;
JButton viewBtn;
JButton nextBtn;
JTextField searchTxt;

JTable table;
//.
}
