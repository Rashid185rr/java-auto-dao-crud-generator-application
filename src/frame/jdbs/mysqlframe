/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame.jdbs;

import database.Database;
import database.TableDB;
import javax.swing.DefaultListModel;
import database.connect.ConnectDB;
import database.connect.ConnectDBs;
import database.connect.DB;
import database.table.Table1;
import function.AddFunctions;
import java.awt.Cursor;
import java.awt.Image;
import java.io.File;
//import java.io.FileFilter;
import java.net.URL;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListModel;
import javax.swing.filechooser.FileSystemView;
import javax.swing.filechooser.FileFilter;
import main.DaoPattern;
import main.Functions;
import utility.Query;
import function.AddFunctions;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;

/**
 *
 * @author tahir hussain
 */
public class MySQLFrame extends javax.swing.JFrame {

    /**
     * Creates new form MySQLFrame
     */
    File sqlFile;
    Database database;
    List<Database> dbList;
    String newProjPath;
    String thisProjPath;

    public MySQLFrame() {
        super("MySQL");
        dbList = new ArrayList<>();
        database = new Database(DB.MySQL, "com.mysql.jdbc.Driver", "jdbs", "jdbc:mysql://localhost:3306", "root", "");
        newProjPath = System.getProperty("user.home").replace("\\", "/") + "/JDBsProject";
        thisProjPath = new File("MySQLFrame.java").getAbsolutePath().replace("\\", "/");
        thisProjPath = thisProjPath.replace("/MySQLFrame.java", "");
        System.out.println("New Project Path" + newProjPath);
        System.out.println("This Project Path" + thisProjPath);

        System.out.println("initializing database");
        initComponents();

        newProjPathLBL.setText(newProjPath);

        // bgLBL.setIcon(getResizedImageIcon(getClass().getResource("/images/tower.jpg")));
        //setBackground(new Color(0,0,0,50));
        executeBar.setVisible(false);
        fillLabel();

    }

    public MySQLFrame(Database database) {
        super("MySQL");
        dbList = new ArrayList<>();
        this.database = database;
        initComponents();
        //bgLBL.setIcon(getResizedImageIcon(getClass().getResource("/images/tower.jpg")));
        executeBar.setVisible(false);
        fillLabel();
    }

    /*
    public ImageIcon getResizedImageIcon(URL url) {
        ImageIcon icon = new ImageIcon(url);
        Image image = icon.getImage();
        System.out.println(bgLBL.getWidth() + "  " + bgLBL.getHeight());
        image = image.getScaledInstance(bgLBL.getWidth(), bgLBL.getHeight(), Image.SCALE_SMOOTH);
        icon.setImage(image);
        return icon;
    }
     */
    public void fillLabel() {

        String[] dbNames = Query.getDBNames();
        DefaultListModel<String> list = new DefaultListModel<>();

        for (String as : dbNames) {
            list.addElement(String.format(as + " \n"));
        }
        databaseList.setModel(list);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        sqlLBL = new javax.swing.JLabel();
        customizeBtn = new javax.swing.JButton();
        executeBtn = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();
        userNameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sqlPathLBL1 = new javax.swing.JLabel();
        savePathBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        pwdTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        softwareName = new javax.swing.JTextField();
        executeBar = new javax.swing.JProgressBar();
        newProjPathLBL = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        databaseList = new javax.swing.JList<>();
        selectAllRd = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        customizeBtn1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 900));
        setSize(new java.awt.Dimension(3200, 1600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sqlLBL.setBackground(new java.awt.Color(53, 59, 72));
        sqlLBL.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        sqlLBL.setForeground(new java.awt.Color(255, 255, 255));
        sqlLBL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frame/newsoftframe/images/add/db (1).png"))); // NOI18N
        sqlLBL.setText("SQL File");
        sqlLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sqlLBLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sqlLBLMouseEntered(evt);
            }
        });
        getContentPane().add(sqlLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(1730, 400, -1, 60));

        customizeBtn.setBackground(new java.awt.Color(87, 101, 116));
        customizeBtn.setForeground(new java.awt.Color(255, 255, 255));
        customizeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frame/newsoftframe/images/back/ (6).png"))); // NOI18N
        customizeBtn.setText("Back");
        customizeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customizeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(customizeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 980, 140, 40));

        executeBtn.setBackground(new java.awt.Color(87, 101, 116));
        executeBtn.setForeground(new java.awt.Color(255, 255, 255));
        executeBtn.setText("Execute");
        executeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(executeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1720, 460, 140, 40));

        createBtn.setBackground(new java.awt.Color(87, 101, 116));
        createBtn.setForeground(new java.awt.Color(255, 255, 255));
        createBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frame/newsoftframe/images/add/java (1).png"))); // NOI18N
        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });
        getContentPane().add(createBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1690, 980, 140, 40));

        userNameTxt.setBackground(new java.awt.Color(53, 59, 72));
        userNameTxt.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        userNameTxt.setForeground(new java.awt.Color(189, 195, 199));
        userNameTxt.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(102, 102, 102))));
        getContentPane().add(userNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 310, 260, 50));

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("User Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, 180, 50));

        sqlPathLBL1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        sqlPathLBL1.setForeground(new java.awt.Color(255, 255, 255));
        sqlPathLBL1.setText("sql file path...");
        getContentPane().add(sqlPathLBL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1550, 320, 330, 50));

        savePathBtn.setBackground(new java.awt.Color(87, 101, 116));
        savePathBtn.setForeground(new java.awt.Color(255, 255, 255));
        savePathBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frame/newsoftframe/images/file/folder.png"))); // NOI18N
        savePathBtn.setText("Change Path");
        savePathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePathBtnActionPerformed(evt);
            }
        });
        getContentPane().add(savePathBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 980, 160, 50));

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Password");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 180, 50));

        pwdTxt.setBackground(new java.awt.Color(53, 59, 72));
        pwdTxt.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        pwdTxt.setForeground(new java.awt.Color(189, 195, 199));
        pwdTxt.setToolTipText("root is default password");
        pwdTxt.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(102, 102, 102))));
        getContentPane().add(pwdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 420, 260, 50));

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Software Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 180, 50));

        softwareName.setEditable(false);
        softwareName.setBackground(new java.awt.Color(53, 59, 72));
        softwareName.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        softwareName.setForeground(new java.awt.Color(189, 195, 199));
        softwareName.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true), javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(102, 102, 102))));
        getContentPane().add(softwareName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 210, 260, 50));

        executeBar.setBackground(new java.awt.Color(53, 59, 72));
        executeBar.setForeground(new java.awt.Color(0, 0, 153));
        getContentPane().add(executeBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 970, 380, 60));

        newProjPathLBL.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        newProjPathLBL.setForeground(new java.awt.Color(255, 255, 255));
        newProjPathLBL.setText("save your file...");
        newProjPathLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newProjPathLBLMouseClicked(evt);
            }
        });
        getContentPane().add(newProjPathLBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 980, 490, 50));

        databaseList.setBackground(new java.awt.Color(53, 59, 72));
        databaseList.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        databaseList.setForeground(new java.awt.Color(189, 195, 199));
        databaseList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        databaseList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                databaseListMouseClicked(evt);
            }
        });
        databaseList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                databaseListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(databaseList);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 600, 180, 370));

        selectAllRd.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        selectAllRd.setForeground(new java.awt.Color(255, 255, 255));
        selectAllRd.setText("Select All");
        selectAllRd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllRdActionPerformed(evt);
            }
        });
        getContentPane().add(selectAllRd, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 550, 250, 40));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 67)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MySQL");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 250, 130));

        customizeBtn1.setBackground(new java.awt.Color(87, 101, 116));
        customizeBtn1.setForeground(new java.awt.Color(255, 255, 255));
        customizeBtn1.setText("Customize");
        customizeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customizeBtn1ActionPerformed(evt);
            }
        });
        getContentPane().add(customizeBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1540, 980, 140, 40));

        jPanel1.setBackground(new java.awt.Color(53, 59, 72));
        jPanel1.setForeground(new java.awt.Color(127, 140, 141));
        jPanel1.setMinimumSize(new java.awt.Dimension(1024, 1024));
        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 1200));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1890, 1100));

        pack();
    }// </editor-fold>                        

    private void sqlLBLMouseClicked(java.awt.event.MouseEvent evt) {                                    
        sqlFile = getSQLFile();
        if (sqlFile != null) {
            executeBtn.setToolTipText("Create Database");
        }
        System.out.println();

    }                                   


    private void savePathBtnActionPerformed(java.awt.event.ActionEvent evt) {                                            

        JFileChooser fileChooser = new JFileChooser();
        int in = fileChooser.showOpenDialog(null);
        if (in == JFileChooser.APPROVE_OPTION) {
            if (fileChooser.getSelectedFile().isDirectory()) {
                newProjPath = fileChooser.getSelectedFile().getAbsolutePath();
                if (newProjPath != null) {
                    newProjPathLBL.setText(newProjPath);
                }
            }
        }


    }                                           

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
//"C:/Users/tahir hussain/Documents/JDBC1/"+
        int clickValue = -1;
        System.out.println(dbList);
        if (dbList.size() > 0) {
//            InformUser us = new InformUser("Creating Java App", "It will All Tables and Columns",
//                    "/frame/newsoftframe/images/information/info (1).png",
//                    "/frame/newsoftframe/images/cancel/can.png",
//                    "/frame/newsoftframe/images/ok/ok.png");
//            us.setVisible(true);
//            clickValue = us.getClickValue();
//                    System.out.println("Click Value:"+clickValue);

            clickValue = JOptionPane.showConfirmDialog(null, "It will create all Tables and Columns of the ");
            if (clickValue == 0) {
                System.out.println("dbList:" + dbList);
                for (Database db : dbList) {
                    executeBar.setVisible(true);
                    System.out.println("-->"+db.getDbName());
                    try{
                    creatingDB(thisProjPath,newProjPath,db.getDbName());
                    }catch(SQLException e){
                        e.printStackTrace();
                    }
                    executeBar.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                }

                dbList.clear();
            } else {

            }
            executeBar.setVisible(false);
        }


    }                                         

    private static void creatingDB(String thisProjPath, String newProjPath, String dbName) throws SQLException{
           Connection con = null;
         
        try {

            System.out.println("connecting --> with "+dbName);
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + dbName, "root", "");
                
            System.out.println("");

//    Connection con=ConnectDBs.getConnection(db);
            DatabaseMetaData meta = con.getMetaData();
            ResultSet rs = meta.getTables(null, null, null, null);
            String table = "";
            int i = 0;
            while (rs.next()) {
                table += "," + rs.getString(3);
                System.out.println(table);
                i++;
            }
             table = table.replaceFirst(",","");
          
            rs.close();
            con.close();
            //Database db = new Database(dbName, TableDB.getTables(dbName, table.split(",")));
            //   System.out.println(db);
            
            Database db=new Database();
            db.setDbName(dbName);
            db.setTables(TableDB.getTables(db.getDbName(), table.split(",")));
           
            //Table1[] t = db.getTables();
            //System.out.println(t.length);
            DaoPattern.createDaoPattern(thisProjPath, newProjPath, db);
            AddFunctions.addFunction(newProjPath, db);
        
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }finally{
            con.close();
        }

    }
    private void customizeBtnActionPerformed(java.awt.event.ActionEvent evt) {                                             
        int length = dbList.size();
        System.out.println("------->" + length);
        if (length > 0) {
            for (Database db : dbList) {
                if (db != null && db.getDbName() != null && !db.getDbName().trim().equals("")) {
                    //dbName = "sakila";
                    //C:/Users/tahir hussain/Documents/JDBC1
                    try {
                        System.out.println("Making Software of " + db + " Database " + length);
                        DatabaseMetaData meta = ConnectDB.getConnection(db).getMetaData();
                        ResultSet rs = meta.getTables(null, null, null, null);
                        String table = "";
                        int i = 0;
                        while (rs.next()) {
                            table += "," + rs.getString(3);
                            System.out.println(table);
                            i++;
                        }
                        table = table.substring(1);
                        rs.close();
                        //Database db = new Database(dbName, TableDB.getTables(dbName, table.split(",")));
                        //   System.out.println(db);
                        db.setTables(TableDB.getTables(db.getDbName(), table.split(",")));

                        Table1[] t = db.getTables();
                        System.out.println(t.length);
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                    new TableFrame(db).setVisible(true);
                    this.setVisible(false);
                }
            }
        }
    }                                            

    private void executeBtnActionPerformed(java.awt.event.ActionEvent evt) {                                           

        if (sqlFile != null) {
            //DB.MySQL, "com.mysql.jdbc.Driver", "jdbc:mysql://localhost:3306", "jdbs", "root", "");
            if (accept(userNameTxt) && accept(pwdTxt)) {
                database.setUserName(userNameTxt.getText());
                database.setPassword(pwdTxt.getText());
            }
            database.setDbName("");

            executeBar.setVisible(true);
            System.out.println("checking database: ----------> " + database);

            String dbName = Query.executeScriptFile(database, sqlFile);
            dbName = Functions.getJcName(dbName);
            database.setDbName(dbName);
            //String dbName=Query.executeScriptFile(database, new File("C:/Users/tahir hussain/Desktop/geekpos.sql"));

            executeBar.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            if (dbName != null && !dbName.trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Database " + sqlFile.getName() + " has been created");
            }
            System.out.println("PROJECT NAME " + dbName);
            softwareName.setEditable(true);

            softwareName.setText(dbName);
            dbList.add(new Database(DB.MySQL, "com.mysql.jdbc.Driver", dbName, "jdbc:mysql://localhost:3306", "root", ""));

        } else {
            //   JOptionPane.showMessageDialog(null,"");
            executeBtn.setToolTipText("Insert SQL File...");
        }

    }                                          

    private void sqlLBLMouseEntered(java.awt.event.MouseEvent evt) {                                    
//        sqlFile = getSQLFile();
//        if (sqlFile == null) {
//            throw new NullPointerException("File is null");
//        }

//setting databse driver 

    }                                   

    private void newProjPathLBLMouseClicked(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void selectAllRdActionPerformed(java.awt.event.ActionEvent evt) {                                            
        if (selectAllRd.isSelected()) {
            DefaultListModel<String> list = (DefaultListModel) databaseList.getModel();
            if (list.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No Database");
            } else {
                String[] obj = new String[list.size()];
                int len = list.size();
                for (int i = 0; i < len; i++) {
                    obj[i] = list.get(i).trim();
                }
                for (int i = 0; i < len; i++) {
                    if (!dbList.contains(obj[i])) {
                        dbList.add(new Database(DB.MySQL, "com.mysql.jdbc.Driver", obj[i++], "jdbc:mysql://localhost:3306", "root", ""));
                    }

                }

            }
            System.out.println(dbList);
        }

    }                                           

    private void databaseListValueChanged(javax.swing.event.ListSelectionEvent evt) {                                          
        System.out.println(databaseList.getSelectedValue());
     dbList = new ArrayList<>();
        
         if (!databaseList.isSelectionEmpty()) {
            List<String> list = databaseList.getSelectedValuesList();
            int len = list.size();
            System.out.println("list-->" + list.size());
            for (int i = 0; i < len; i++) {
                if (!dbList.contains(list.get(i).trim())) {
                    dbList.add(new Database(DB.MySQL, "com.mysql.jdbc.Driver", list.get(i).trim(), "jdbc:mysql://localhost:3306", "root", ""));
                }
                System.out.println(">>>");
            }
            System.out.println("--->" + dbList);

        }
         

    }                                         
/*
    public static Connection getConnection(String dbName) {
        System.out.println("Connection1");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/" + dbName, "root", "");
            ResultSet rs = con.prepareStatement("SELECT * FROM  film").executeQuery();
            while (rs.next()) {
                System.out.println(rs.getString(1));
            }
            rs.close();
            con.close();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }*/
    private void databaseListMouseClicked(java.awt.event.MouseEvent evt) {                                          


    }                                         

    private void customizeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private boolean accept(JTextField field) {

        if (field.getText() == null || field.getText().trim().equals("")) {
            return false;
        }
        return true;
    }

    public File getSQLFile() {

        JFileChooser fileChooser = new JFileChooser("C:", FileSystemView.getFileSystemView());
        int ap = fileChooser.showOpenDialog(null);

        FileFilter filter = new FileFilter() {
            File file;

            @Override
            public boolean accept(File file) {
                this.file = file;
                if (file == null) {
                    return false;
                }
                if (file.isDirectory()) {
                    return false;
                }
                if (file.getName().endsWith(".sql") || file.getName().endsWith(".txt")) {
                    return true;
                }
                return false;
            }

            @Override
            public String getDescription() {
                return ".sql or .txt file";
            }
        };
        // filter.accept(new File(".sql"));
        fileChooser.setFileFilter(filter);
        fileChooser.addChoosableFileFilter(filter);
        if (ap == JFileChooser.APPROVE_OPTION) {

            return fileChooser.getSelectedFile();
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MySQLFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MySQLFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MySQLFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MySQLFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MySQLFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton createBtn;
    private javax.swing.JButton customizeBtn;
    private javax.swing.JButton customizeBtn1;
    private javax.swing.JList<String> databaseList;
    private javax.swing.JProgressBar executeBar;
    private javax.swing.JButton executeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel newProjPathLBL;
    private javax.swing.JTextField pwdTxt;
    private javax.swing.JButton savePathBtn;
    private javax.swing.JRadioButton selectAllRd;
    private javax.swing.JTextField softwareName;
    private javax.swing.JLabel sqlLBL;
    private javax.swing.JLabel sqlPathLBL1;
    private javax.swing.JTextField userNameTxt;
    // End of variables declaration                   
}

